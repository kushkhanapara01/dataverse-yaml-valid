version: 0.1.0
alias: Test987123asd
discoveryPort:
  name: Weather react
  shortDescription: Weather Forecast of the next 7 days for ahmedabad city
  longDescription: >-
    Weather Forecast of the next 7 days for ahmedabad city along with the
    accuracy of the previous forecast
  tags:
    - Weather
    - Forecast
    - City
    - Geospatial
  email: user@maf.ae
  dataTimeRange:
    fromMinDataDate: '2022-04-07'
    toMinDataDate: '2022-04-14'
    timeColumn: '2022-04-07'
  industryDomain: Meteorology
  function: Forecast
  regulatoryFields:
    dataPrivacy: public
    customerInfo: nonPII
    dataOrigin: machineGenerated
    monetaryInfo: nonFinancialData
inputPorts:
  - alias: car_prices_csv
    description: string
    tags: []
    syncType: pull
    type: s3-csv
    dataSetUrn: urn:dv:dataset:90244889-d1bf-4f87-a046-160928e08bd0
    incrementalLoad: true
    incrementalStrategy:
      frequency:
        - keyReference: timeStamp
          mode: range
          interval: -5
    entity:
      path: >-
        s3a://dataverse-byte/sample-data/inputData/demo/demo_update2.csv
      advanceOptions:
        delimiter: '|'
      variables:
        - key: timeStamp
          value: date-YYYYMMdd
productState:
  refreshInterval: 0/15 * * * *
  updateStrategy: append
  logicalSchema:
    properties:
      brand:
        type: string
      model:
        type: string
      engine:
        type: string
      year:
        type: string
      location:
        type: string
  encodingType: HASH
  columnsToEncode:
    - A
    - B
  partitionColumns:
    - A
    - B
transformation:
  - alias: car_price_step_1
    description: step_1
    type: SQL
    sequenceNo: '1'
    query: SELECT * FROM car_prices_csv
    references:
      - alias: car_prices_csv
        sqlReference: car_prices_csv
  - alias: car_price_step_2
    description: step_2
    query: SELECT * FROM car_prices
    type: SQL
    sequenceNo: '2'
    references:
      - alias: car_prices
        sqlReference: car_prices
controlPort:
  dataQualityCheck:
    RecordCountCheck:
      inputPort:
        - referenceAlias: car_prices
          expression: ==
          number: 100
        - referenceAlias: car_prices_csv
          expression: <=
          number: 200
      transformation:
        - referenceAlias: trans_step
          expression: ==
          number: 100
        - referenceAlias: trans_step
          expression: <=
          number: 200
      productState:
        referenceAlias: Test0001
        expression: ==
        number: 100
    NullValueCheck:
      inputPort:
        - referenceAlias: car_prices
          checks:
            - column: id
              expression: '>='
              number: 90
            - column: name
              expression: '>='
              number: 90
    UnacceptableTextValueCheck:
      inputPort:
        - referenceAlias: car_prices
          checks:
            - column: colA
              valueList:
                - A
                - B
                - C
              number: 0.5
              expression: '>='
            - column: colA
              valueList:
                - A
                - B
                - C
              number: 0.5
              expression: '>='
      transformation:
        - referenceAlias: car_prices
          checks:
            - column: colA
              valueList:
                - A
                - B
                - C
              number: 0.5
              expression: '>='
            - column: colA
              valueList:
                - A
                - B
                - C
              number: 0.5
              expression: '>='
      productState:
        referenceAlias: Test0001
        checks:
          - column: colA
            valueList:
              - A
              - B
              - C
            number: 0.5
            expression: '>='
          - column: colA
            valueList:
              - A
              - B
              - C
            number: 0.5
            expression: '>='
    UniqueCombinationCheck:
      inputPort:
        - referenceAlias: car_prices
          checks:
            - columns:
                - colA
                - colB
            - columns:
                - colD
                - colE
      transformation:
        - referenceAlias: trans_ref
          checks:
            - columns:
                - colA
                - colB
            - columns:
                - colD
                - colE
      productState:
        referenceAlias: Test0001
        checks:
          - columns:
              - colA
              - colB
          - columns:
              - colA
              - colB
    DistinctValueCountCheck:
      inputPort:
        - referenceAlias: car_prices
          checks:
            - column: colA
              number: 3
              expression: '>='
            - column: colC
              number: 2
              expression: '>='
      transformation:
        - referenceAlias: trans_ref
          checks:
            - column: colA
              number: 3
              expression: '>='
            - column: colB
              number: 4
              expression: '>='
      productState:
        referenceAlias: Test0001
        checks:
          - column: colA
            number: 3
            expression: '>='
          - column: colA
            number: 3
            expression: '>='
outputPort:
  subscriptionChannels:
    - channelType: JDBC
      queryType: SQL
