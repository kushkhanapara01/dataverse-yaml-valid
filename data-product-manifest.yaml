---
version: 0.0.1
discoveryPort:
  name: Duplicate Name validation 101
  alias: Duplicate_Name_validation_DP
  description: Average car price in barcelona
  category: customer
  image: http://google.com
  autofillUserinfo: true
  tags: []
  extra: {}
inputPorts:
  - alias: car_input_port
    description: string
    tags: []
    extra: {}
    syncType: pull
    type: s3
    sourceUrn: urn:dv:datasource:0ec70f7b-0691-4059-a0ee-e00a49c62542
    entityId:
      alias: car_prices
      createEntity: true
      type: s3-bucket
      entityPath: "s3a://dp-input-bucket/user_car_prices_barcelona_2022/"
      entityFilterPatternMatch: "*"
      sourceSchemaUrn: urn:dv:schema:9d4716d4
      projectSchemaUrn: urn:dv:schema:9d4716d6
      fileFormat: parquet
      delimiter: ","
      header: true
      filter: brand = 'BMW'
      processingTimeColumn:
        - processing_time
      actualTimeColumn:
        - processing_time
      projection:
        - brand
        - model
        - engine
        - year
        - location
stateManagement:
  alias: car_prices_barcelona
  refreshInterval: 00 10 * * *
  updateStrategy: append
  productStoreState:
    logicalSchema:
      properties:
        legal_entity:
          type: string
        store_name:
          type: string
        amount:
          type: int
        payment_option:
          type: string
        currency:
          type: string
    retentionVersions: "10"
transformation:
  sql: select * from car_prices
outputPort:
  channels:
    - channelType: REST-API
      queryType: SQL
    - channelType: JDBC
      queryType: SQL
dataQualityCheck:
  RecordCountCheck:
    inputPort:
      - referenceAlias: car_prices
        expression: "=="
        number: 100
